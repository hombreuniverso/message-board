<html>
  <!--Head-->
  <%- include("partials/header")%>

  <body>
    <!--Navbar-->
    <%- include("partials/navbar", {linksNav: links})%>

    <!--Main Heading-->
    <div class="main-heading"><%= mainHeading%></div>

    <!--Message Container-->
    <div class="message-container">
      <ul class="message-ul">
        <%for(i = 0; i < messages.length; i++){%> <%let index = i%>
        <div class="line-anchor-container">
          <li class="line" data-anchornum="<%=index%>">
            <%= `${messages[i].id} ${messages[i].user}: ${messages[i].snippet}
            ${messages[i].added}` %>
          </li>

          <!--Use template literals for dynamic data
        in javascript-->

          <button class="btn-open" data-anchornum="<%=index%>">Open</button>
        </div>

        <%}%>
      </ul>
    </div>

    <script>
      //Run on Front end (Client side)

      //Reference line and anchor tags
      // const anchor = document.querySelectorAll(".btn-open");
      //  const line = document.querySelectorAll(".line");

      // let index = "";

      /*Prevent buttons not returning correct index numbers because
            the js code is not re-executed and the event listeners are not
            re-attached to the buttons when browser's back arrow is used

            Event Delegation is a more robust solution

            Instead of attaching the event listener to each button
            individually, you can attach a single event listener to the
            parent element of the buttons (in this case, the
            .message-container element). Then, when a button is clicked,
            you can use the event.target property to determine which
            button was clicked. E.g.:


            //Find index of button clicked
            const messageContainer = document.querySelector(".message-container");

            messageContainer.addEventListener("click", (e) => {
              if (e.target.classList.contains("btn-open")) {
                let index = e.target.dataset.anchornum;
                location.href = `details?index=${index}`;
                console.log({ index });
              }
            });
      */

      /*Alternatively:
      You can also try using the
      window.addEventListener('load', ...) method to re-attach the
      event listeners to the buttons when the page is loaded. This
      can help ensure that the event listeners are always attached,
      even when the page is navigated back using the browser's
      back button.
      */
      //Find index of button clicked
      const buttons = document.querySelectorAll(".btn-open");

    
        buttons.forEach((button) => {
          button.addEventListener("click", (e) => {
            let currentIndex = Array.prototype.indexOf.call(buttons, e.target);
            location.href = `details?index=${currentIndex}`;
            console.log({ index:currentIndex });
            // e.preventDefault();
          });
        });
     

      /* data = document.getElementById("anchor").href = `details?index=${index}&data=${encodeURIComponent(
                        JSON.stringify(info)
                      )}`;
                 */
      //e.preventDefault();
    </script>
  </body>
</html>
